//*************************************************************************************************
// トラック処理 (track.h)
// Author : YUHEI KAN
//*************************************************************************************************
#ifndef _TRACK_H_
#define _TRACK_H_

//*************************************************************************************************
// インクルードファイル
//*************************************************************************************************

//*************************************************************************************************
// マクロ定義 
//*************************************************************************************************
static const int MAX_INDEX = 4000;
static const int MAX_VTX = 4000;
#define CHECKPOINT_NUM ( 24 )                   //チェックポイントの最大数

//*************************************************************************************************
// 構造体
//*************************************************************************************************

//*************************************************************************************************
// クラス
//*************************************************************************************************
//トラッククラス
class CTrack :public CSceneModel
{
public:
    CTrack(int nPriority = 3);                  //コンストラクタ
    ~CTrack();                                  //デコンストラクタ

    HRESULT Init(void);                         //初期化処理
    void Uninit(void);                          //終了処理
    void Update(void);                          //更新処理
    void Draw(void);                            //描画処理

    static CTrack *Create(D3DXVECTOR3 Pos,
        D3DXVECTOR3 Scl,
        int nPriority = 3);                     //自身を生成

    D3DXVECTOR3 GetPos(void);                   //座標の取得
    float GetHeight(D3DXVECTOR3 Pos);           //地面の高さ取得
    D3DXVECTOR3 GetCheckPointStart(int Num);    //チェックポイント(始点)の取得
    D3DXVECTOR3 GetCheckPointEnd(int Num);      //チェックポイント(終点)の取得

private:
    DWORD		m_vtxIndex[MAX_INDEX];			//インデックス番号			
    D3DXVECTOR3	m_vtxPos[MAX_VTX];				//座標
    D3DXVECTOR3 m_CheckPointStart[CHECKPOINT_NUM];//チェックポイント(始点)
    D3DXVECTOR3 m_CheckPointEnd[CHECKPOINT_NUM];  //チェックポイント(終点)
    int m_EmitterCount;                         //エミッター生成カウント
};

//*************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************

#endif //_TRACK_H_