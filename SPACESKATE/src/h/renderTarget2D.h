//*************************************************************************************************
// レンダーターゲット2D処理 (renderTarget2D.h)
// Author : YUHEI KAN
//*************************************************************************************************

//*************************************************************************************************
// インクルードガード
//*************************************************************************************************
#ifndef _RENDERTARGET2D_H_
#define _RENDERTARGET2D_H_

//*************************************************************************************************
// インクルード
//*************************************************************************************************

//*************************************************************************************************
// 定数定義
//*************************************************************************************************

//*************************************************************************************************
// 列挙体
//*************************************************************************************************

//*************************************************************************************************
// 構造体
//*************************************************************************************************

//*************************************************************************************************
// 前方宣言
//*************************************************************************************************

//*************************************************************************************************
// クラス
//*************************************************************************************************
//レンダーターゲット2Dクラス
class CRenderTarget2D
{
public:
    CRenderTarget2D();                                      //コンストラクタ
    ~CRenderTarget2D();                                     //デコンストラクタ

    HRESULT Init(void);                                     //初期化処理
    void Uninit(void);                                      //終了処理
    void Update(void);                                      //更新処理
    void Draw(void);                                        //描画処理

    void IsFeedbackBlur(bool flag);                         //フィードバックブラーON/OFF
    bool GetFeedbackBlur(void);                             //フィードバックブラーフラグの取得

private:
    LPDIRECT3DVERTEXBUFFER9 m_pVtxBuff;                     //頂点バッファへのポインタ
    LPDIRECT3DTEXTURE9 m_RenderTargetTexture;               //レンダーターゲットテクスチャ
    LPDIRECT3DTEXTURE9 m_RenderTargetTexture1;              //レンダーターゲットテクスチャ1
    LPDIRECT3DTEXTURE9 m_RenderTargetTexture2;              //レンダーターゲットテクスチャ2
    LPDIRECT3DSURFACE9 m_RenderTargetSurface;               //レンダーターゲットサーフェス
    LPDIRECT3DSURFACE9 m_RenderTargetSurface1;              //レンダーターゲットサーフェス1
    LPDIRECT3DSURFACE9 m_RenderTargetSurface2;              //レンダーターゲットサーフェス2
    LPDIRECT3DSURFACE9 m_BackBufferSurface;                 //バックバッファサーフェス
    D3DXVECTOR3 m_pos;                                      //座標
    D3DXVECTOR3 m_size;                                     //サイズ
    bool m_FeedbackBlur;                                    //フィードバックブラーフラグ
};

//*************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************

#endif //_RENDERTARGET2D_H_