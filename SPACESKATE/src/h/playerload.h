//*************************************************************************************************
// プレイヤー読み込み処理 (playerload.h)
// Author : YUHEI KAN
//*************************************************************************************************
#ifndef _PLAYERLOAD_H_
#define _PLAYERLOAD_H_

//*************************************************************************************************
// インクルードファイル
//*************************************************************************************************
#include <vector>
#include <string>

//*************************************************************************************************
// マクロ定義 
//*************************************************************************************************

//*************************************************************************************************
// 構造体
//*************************************************************************************************

//*************************************************************************************************
// 前方宣言
//*************************************************************************************************
class CParts;
class CKey;
class CKeyFrame;
class CMotion;

//*************************************************************************************************
// クラス
//*************************************************************************************************
//プレイヤークラス
class CPlayerLoad
{
public:
    HRESULT Load(int i);                        //読み込み処理
    void Unload(void);                          //解放処理

    std::vector<CParts*> GetParts(void);        //パーツ情報の取得
    std::vector<CMotion*> GetMotions(void);     //モーション情報の取得

private:
    void DeleteHeadSpace(std::string &buf);
    void SetValue(std::string str, int *value);
    void SetXYZ(std::string str, D3DXVECTOR3 *pos);
    void SetKey(std::vector<std::string>::const_iterator it, CKey *key);
    void SetKeyFrame(std::vector<std::string>::const_iterator it, CKeyFrame *keyframe, int numPart);

    std::vector<CParts*> m_Part;                //パーツ情報
    std::vector<CMotion*> m_Motion;             //モーション情報
};

//*************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************

#endif //_PLAYERLOAD_H_