//*************************************************************************************************
// カウントダウン処理 (countdawn.h)
// Author : YUHEI KAN
//*************************************************************************************************
#ifndef _COUNTDAWN_H_
#define _COUNTDAWN_H_

//*************************************************************************************************
// インクルードファイル
//*************************************************************************************************

//*************************************************************************************************
// マクロ定義
//*************************************************************************************************

//*************************************************************************************************
// 構造体
//*************************************************************************************************

//*************************************************************************************************
// クラス
//*************************************************************************************************
//カウントダウンクラス
class CCountdawn :public CScene2D
{
public:
    CCountdawn(int nPriolity = 3);              //コンストラクタ
    ~CCountdawn();                              //デコンストラクタ

    HRESULT Init(void);                         //初期化処理
    void Uninit(void);                          //終了処理
    void Update(void);                          //更新処理
    void Draw(void);                            //描画処理

    static CCountdawn *Create(
        D3DXVECTOR3 Pos,
        int nPriolity = 3);                     //自身を生成

    int GetCountDawn(void);                     //カウトダウン数値の取得

private:
    LPDIRECT3DTEXTURE9      m_pTexture[2];      //テクスチャへのポインタ
    LPDIRECT3DVERTEXBUFFER9 m_pVtxBuff;         //頂点バッファへのポインタ
    int m_CountDawn;                            //カウントダウン数値
    int m_FrameCount;                           //フレームカウント
    bool m_bCount;                              //カウントダウン表示判定
    float m_ColorA;                             //アルファ値
    int m_CountDawnStart;                       //カウントダウンスタートカウント
};

//*************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************

#endif //_COUNTDAWN_H_