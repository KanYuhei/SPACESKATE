//*************************************************************************************************
// シーンモデル処理 (sceneModel.h)
// Author : YUHEI KAN
//*************************************************************************************************
#ifndef _SCENEMODEL_H_
#define _SCENEMODEL_H_

//*************************************************************************************************
// インクルードファイル
//*************************************************************************************************

//*************************************************************************************************
// マクロ定義 
//*************************************************************************************************
#define MDEL_TEXTURE_NUM (32)                           //モデルで読み込むテクスチャ枚数

//*************************************************************************************************
// 構造体
//*************************************************************************************************

//*************************************************************************************************
// クラス
//*************************************************************************************************
//シーンモデルクラス
class CSceneModel:public CScene
{
public:
    CSceneModel ( SCENE_TYPE type, int nPriority = 3 ); //コンストラクタ
    ~CSceneModel ( );                                   //デコンストラクタ

    HRESULT Init ( void );                              //初期化処理
    void Uninit ( void );                               //終了処理
    void Update ( void );                               //更新処理
    void Draw ( void );                                 //描画処理

    HRESULT LoadX(const char *filename);                //Xファイルの読み込み
    D3DXVECTOR3 GetScl ( void );                        //拡大の取得
    D3DXVECTOR3 GetRot(void);                           //回転の取得

    void SetScl ( D3DXVECTOR3 Scl );                    //拡大の設定
    void SetRot(D3DXVECTOR3 Rot);                       //回転の設定

protected:
    LPD3DXMESH m_pMesh;                                 //メッシュ情報インターフェース
    LPD3DXBUFFER m_pBuffMat;                            //マテリアル情報
    DWORD m_nNumMat;                                    //マテリアル情報の数
    LPDIRECT3DTEXTURE9 m_pTexture[MDEL_TEXTURE_NUM];    //テクスチャイへのポインタ
    D3DXQUATERNION m_Quaternion;                        //回転(クォータニオン)
    D3DXVECTOR3 m_Scl;                                  //拡大
    D3DXVECTOR3 m_Rot;                                  //回転
};

//*************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************

#endif //_SCENEMODEL_H_