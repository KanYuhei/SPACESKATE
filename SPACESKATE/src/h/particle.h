//*************************************************************************************************
// パーティクル処理 (particle.h)
// Author : YUHEI KAN
//*************************************************************************************************

//*************************************************************************************************
// インクルードガード
//*************************************************************************************************
#ifndef _PARTICLE_H_
#define _PARTICLE_H_

//*************************************************************************************************
// インクルード
//*************************************************************************************************
#include "main.h"
#include "scene.h"
#include "scene3D.h"

//*************************************************************************************************
// 定数定義
//*************************************************************************************************
#define PARTICLE_MAX ( 256 )                    //パーティクル最大数

//*************************************************************************************************
// 列挙体
//*************************************************************************************************

//*************************************************************************************************
// 構造体
//*************************************************************************************************
//パーティクル情報
typedef struct {
    D3DXVECTOR3 Pos;                            //中心座標(XY座標)
    D3DXVECTOR2 Size;                           //サイズ(XY座標)
    D3DXVECTOR3 Speed;                          //速度(XY座標)
    D3DXVECTOR3 Acceleration;                   //加速度(XY座標)
    D3DXVECTOR3 scl;                            //拡大
    D3DXCOLOR Color;                            //色
    int nLife;                                  //寿命
    float fRange;                               //カメラからの距離
    bool bUse;                                  //使用しているかどうか
}PARTICLE;

//*************************************************************************************************
// クラス
//*************************************************************************************************
//パーティクルクラス
class CParticle
{
public:
    CParticle();                                //コンストラクタ
    ~CParticle();                                //デコンストラクタ

    HRESULT Init(void);                         //初期化処理
    void Uninit(void);                          //終了処理
    void Update(void);                          //更新処理
    void Draw(void);                            //描画処理

    static CParticle *Create ( void );          //自身を生成

    void Set(D3DXVECTOR3 Pos, 
             D3DXVECTOR3 Speed, 
             D3DXCOLOR Color, 
             int nLife);                        //パーティクルの設定
    PARTICLE *Get(void);                        //パーティクルの取得

private:
    float RangeV(D3DXVECTOR3 v1, D3DXVECTOR3 v2);//ベクトル間の距離
    void SetVertexParticle(VERTEX_3D* pVtx, 
                           int nNum);           //頂点の設定

    LPDIRECT3DTEXTURE9 m_pTexture;              //テクスチャインターフェースポインタ
    LPDIRECT3DVERTEXBUFFER9 m_pVtxBuffer;       //頂点バッファ管理インターフェースポインタ
    PARTICLE m_Particle[PARTICLE_MAX];          //パーティクル情報
};

//*************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************

#endif  //_PARTICLE_H_