//*************************************************************************************************
// カメラ処理 (camera.h)
// Author : YUHEI KAN
//*************************************************************************************************

//*************************************************************************************************
// インクルードガード
//*************************************************************************************************
#ifndef _CAMERA_H_
#define _CAMERA_H_

//*************************************************************************************************
// インクルード
//*************************************************************************************************

//*************************************************************************************************
// 定数定義
//*************************************************************************************************

//*************************************************************************************************
// 列挙体
//*************************************************************************************************

//*************************************************************************************************
// 構造体
//*************************************************************************************************

//*************************************************************************************************
// クラス
//*************************************************************************************************
//カメラクラス
class CCamera
{
public:
    CCamera ( );                                //コンストラクタ
    ~CCamera ( );                               //デコンストラクタ

    HRESULT Init ( void );                      //初期化処理
    void Uninit ( void );                       //終了処理
    void Update ( void );                       //更新処理

    void Set ( void );                          //カメラをセットする

    D3DXVECTOR3 GetPos ( void );                //座標の取得
    D3DXVECTOR3 GetPosAt ( void );              //注視点の取得
    D3DXVECTOR3 GetVecDirect(void);             //前方向ベクトルの取得

    void SetPos ( D3DXVECTOR3 Pos );            //座標の設定
    void SetPosAt ( D3DXVECTOR3 Pos );          //注視点の設定

    int GetScreenWidth ( void );                //画面の幅取得
    int GetScreenHeight ( void );               //画面の高さ取得

    void SetScreenSize ( int width, int height );//画面サイズの設定

    D3DXMATRIX *GetmtxView ( void );            //ビュー行列の取得   

    void AddLength(float length);               //注視点からの距離の加算
    void AddAngleY(float AngleY);               //Y軸回転角度の加算
    void AddAngleX(float AngleX);               //X軸回転角度の加算

    bool IntoView(D3DXVECTOR3 Vec, float rad);  //物体が視野に入っているかチェック

private:
    D3DXMATRIX m_mtxView;                       //ビュー行列
    D3DXVECTOR3 m_posAt;                        //注視点
    D3DXVECTOR3 m_posEye;                       //座標
    D3DXVECTOR3 m_vecUp;                        //上方向ベクトル
    D3DXVECTOR3 m_vecDirect;                    //前方向ベクトル
    float m_fLength;                            //注視点からの距離
    float m_fAngleY;                            //Y軸回転角度
    float m_fAngleX;                            //X軸回転角度

    int m_nScreenWidth;                         //画面の幅
    int m_nScreenHeight;                        //画面の高さ
};

//*************************************************************************************************
// プロトタイプ宣言
//*************************************************************************************************

#endif  //_CAMERA_H_